name: Test and build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Node.js 16.x testing stuff
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm ci
      - run: npm run test
      - name: Download test coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage_report
          path: coverage_res
      - name: Archive coverage report
        run: |
          sudo apt-get update
          sudo apt-get install zip
          zip -r report.zip coverage_res
      - name: Upload artifacts to google drive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.G_CREDENTIALS }}
          filename: "report.zip"
          folderId: ${{ secrets.G_FOLDER_ID }}
          overwrite: "true"

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Node.js 16.x setup
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm ci
      - run: npm run build
      - name: Download build files
        uses: actions/upload-artifact@v3
        with:
          name: lab_compiled
          path: dist
      - name: Archive compiled files
        run: |
          sudo apt-get update
          sudo apt-get install zip
          zip -r compiled.zip dist
      - name: Upload compiled files to google drive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.G_CREDENTIALS }}
          filename: "compiled.zip"
          folderId: ${{ secrets.G_FOLDER_ID }}
          overwrite: "true"

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_NAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_NAME }}/express::latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - uses: actions/checkout@v3
      - name: Push to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_IP }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_PUB }}
          passphrase: ${{ secrets.DEPLOY_PASSPHRASE }}
          script: docker pull ${{ secrets.DOCKER_NAME }}/express:latest && docker run -p ${{ secrets.DEPLOY_PORT }}:${{ secrets.DEPLOY_EXPOSE }} ${{ secrets.DOCKER_NAME }}/express:latest
